{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\laksh\\\\Downloads\\\\workflow-automation1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\workflow-automation1\\\\src\\\\components\\\\Header.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/Header.css\";\nimport { CSSTransition } from \"react-transition-group\";\nimport history from \"./../history\";\n\nfunction Header(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isNavVisible = _useState2[0],\n        setNavVisibility = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isSmallScreen = _useState4[0],\n        setIsSmallScreen = _useState4[1];\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(max-width: 1000px)\");\n    mediaQuery.addListener(handleMediaQueryChange);\n    handleMediaQueryChange(mediaQuery);\n    return () => {\n      mediaQuery.removeListener(handleMediaQueryChange);\n    };\n  }, []);\n\n  const handleMediaQueryChange = mediaQuery => {\n    if (mediaQuery.matches) {\n      setIsSmallScreen(true);\n    } else {\n      setIsSmallScreen(false);\n    }\n  };\n\n  const toggleNav = () => {\n    setNavVisibility(!isNavVisible);\n  };\n\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"Header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../assets/logo3.png\"),\n    className: \"Logo\",\n    alt: \"logo\",\n    onClick: () => history.push(\"/Env\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CSSTransition, {\n    in: !isSmallScreen || isNavVisible,\n    timeout: 350,\n    classNames: \"NavAnimation\",\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"Nav\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    name: \"Env\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Environment\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    name: \"Supplier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Supplier\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    name: \"Prod\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Products\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    name: \"Po\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Purchase Order\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    name: \"ASN\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"ASN\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Logout\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: toggleNav,\n    className: \"Gear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"\\u2699\\uFE0F\"));\n}\n\nexport default Header;","map":{"version":3,"sources":["C:/Users/laksh/Downloads/workflow-automation1/src/components/Header.jsx"],"names":["React","useState","useEffect","CSSTransition","history","Header","props","isNavVisible","setNavVisibility","isSmallScreen","setIsSmallScreen","mediaQuery","window","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","toggleNav","require","push"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,mBAAP;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA,oBACoBL,QAAQ,CAAC,KAAD,CAD5B;AAAA;AAAA,QACdM,YADc;AAAA,QACAC,gBADA;;AAAA,qBAEqBP,QAAQ,CAAC,KAAD,CAF7B;AAAA;AAAA,QAEdQ,aAFc;AAAA,QAECC,gBAFD;;AAIrBR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAGC,MAAM,CAACC,UAAP,CAAkB,qBAAlB,CAAnB;AACAF,IAAAA,UAAU,CAACG,WAAX,CAAuBC,sBAAvB;AACAA,IAAAA,sBAAsB,CAACJ,UAAD,CAAtB;AAEA,WAAO,MAAM;AACXA,MAAAA,UAAU,CAACK,cAAX,CAA0BD,sBAA1B;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMA,sBAAsB,GAAGJ,UAAU,IAAI;AAC3C,QAAIA,UAAU,CAACM,OAAf,EAAwB;AACtBP,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAFD,MAEO;AACLA,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD;AACF,GAND;;AAQA,QAAMQ,SAAS,GAAG,MAAM;AACtBV,IAAAA,gBAAgB,CAAC,CAACD,YAAF,CAAhB;AACD,GAFD;;AAIA,sBACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEY,OAAO,CAAC,qBAAD,CADd;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,GAAG,EAAC,MAHN;AAIE,IAAA,OAAO,EAAE,MAAMf,OAAO,CAACgB,IAAR,CAAa,MAAb,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE,oBAAC,aAAD;AACE,IAAA,EAAE,EAAE,CAACX,aAAD,IAAkBF,YADxB;AAEE,IAAA,OAAO,EAAE,GAFX;AAGE,IAAA,UAAU,EAAC,cAHb;AAIE,IAAA,aAAa,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,IAAI,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,IAAI,EAAC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVF,eAaE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,CANF,CAPF,eAgCE;AAAQ,IAAA,OAAO,EAAEW,SAAjB;AAA4B,IAAA,SAAS,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhCF,CADF;AAsCD;;AAED,eAAeb,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/Header.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport history from \"./../history\";\r\n\r\nfunction Header(props) {\r\n  const [isNavVisible, setNavVisibility] = useState(false);\r\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const mediaQuery = window.matchMedia(\"(max-width: 1000px)\");\r\n    mediaQuery.addListener(handleMediaQueryChange);\r\n    handleMediaQueryChange(mediaQuery);\r\n\r\n    return () => {\r\n      mediaQuery.removeListener(handleMediaQueryChange);\r\n    };\r\n  }, []);\r\n\r\n  const handleMediaQueryChange = mediaQuery => {\r\n    if (mediaQuery.matches) {\r\n      setIsSmallScreen(true);\r\n    } else {\r\n      setIsSmallScreen(false);\r\n    }\r\n  };\r\n\r\n  const toggleNav = () => {\r\n    setNavVisibility(!isNavVisible);\r\n  };\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n      <img\r\n        src={require(\"../assets/logo3.png\")}\r\n        className=\"Logo\"\r\n        alt=\"logo\"\r\n        onClick={() => history.push(\"/Env\")}\r\n      />\r\n      <CSSTransition\r\n        in={!isSmallScreen || isNavVisible}\r\n        timeout={350}\r\n        classNames=\"NavAnimation\"\r\n        unmountOnExit\r\n      >\r\n        <nav className=\"Nav\">\r\n          <a href=\"#\" name=\"Env\">\r\n            Environment\r\n          </a>\r\n          <a href=\"#\" name=\"Supplier\">\r\n            Supplier\r\n          </a>\r\n          <a href=\"#\" name=\"Prod\">\r\n            Products\r\n          </a>\r\n          <a href=\"#\" name=\"Po\">\r\n            Purchase Order\r\n          </a>\r\n          <a href=\"#\" name=\"ASN\">\r\n            ASN\r\n          </a>\r\n          <button>Logout</button>\r\n        </nav>\r\n      </CSSTransition>\r\n      <button onClick={toggleNav} className=\"Gear\">\r\n        ⚙️\r\n      </button>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}