{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\laksh\\\\Downloads\\\\workflow-automation1\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\laksh\\\\Downloads\\\\workflow-automation1\\\\src\\\\components\\\\TableRowCustom.jsx\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableColCustom from \"./TableColCustom\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nfunction TableRowCustom(props) {\n  let res = [];\n  let cellValue1 = {}; //Styling table rows\n\n  const StyledTableRow = withStyles(theme => ({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: theme.palette.action.hover\n      }\n    }\n  }))(TableRow);\n  tableRow();\n  /*  {val} :object of column values passed from tableColumn */\n\n  /*  {newVal} :object of column values passed from {val} object and populated \r\n  it only if all the columns for the particular row is filled */\n\n  /*  id : it contains the row index of the column got edited */\n\n  /*{cellValue}: final object which contains the row value and column value\r\n  Structure of {cellValue}:\r\n      Object {0: Object, 1: Object}\r\n        0: Object\r\n          val: Object\r\n            Supplier_ID: \"1\"\r\n            Reduced Checking: \"2\"\r\n            ASN Approved: \"3\"\r\n        1: Object\r\n          val: Object\r\n            Supplier_ID: \"4\"\r\n            Reduced Checking: \"5\"\r\n            ASN Approved: \"6\"\r\n      */\n\n  var newVal = {};\n\n  function colVal(val, id) {\n    newVal = {};\n    Object.entries(val).map(([key, value]) => {\n      if (value > \"\") {\n        newVal = _objectSpread(_objectSpread({}, newVal), {}, {\n          [key]: value\n        });\n      }\n\n      return newVal;\n    });\n    cellValue1 = _objectSpread(_objectSpread({}, cellValue1), {}, {\n      [id]: newVal\n    });\n    props.cellFinal(cellValue1);\n  }\n\n  var j;\n\n  function tableRow() {\n    for (j = 0; j < props.totalrows; j++) {\n      res.push( /*#__PURE__*/React.createElement(StyledTableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableColCustom, {\n        key: j,\n        id: j,\n        colval: colVal,\n        headers: props.headers,\n        totalcols: props.totalcols,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      })));\n    }\n\n    return res;\n  }\n\n  return res;\n}\n\nexport default TableRowCustom;","map":{"version":3,"sources":["C:/Users/laksh/Downloads/workflow-automation1/src/components/TableRowCustom.jsx"],"names":["React","withStyles","TableColCustom","TableRow","TableRowCustom","props","res","cellValue1","StyledTableRow","theme","root","backgroundColor","palette","action","hover","tableRow","newVal","colVal","val","id","Object","entries","map","key","value","cellFinal","j","totalrows","push","headers","totalcols"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,UAAU,GAAG,EAAjB,CAF6B,CAG7B;;AACA,QAAMC,cAAc,GAAGP,UAAU,CAACQ,KAAK,KAAK;AAC1CC,IAAAA,IAAI,EAAE;AACJ,4BAAsB;AACpBC,QAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC;AADlB;AADlB;AADoC,GAAL,CAAN,CAAV,CAMnBX,QANmB,CAAvB;AAOAY,EAAAA,QAAQ;AACR;;AACA;;;AAEA;;AACA;;;;;;;;;;;;;;;AAcA,MAAIC,MAAM,GAAG,EAAb;;AACA,WAASC,MAAT,CAAgBC,GAAhB,EAAqBC,EAArB,EAAyB;AACvBH,IAAAA,MAAM,GAAG,EAAT;AACAI,IAAAA,MAAM,CAACC,OAAP,CAAeH,GAAf,EAAoBI,GAApB,CAAwB,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAkB;AACxC,UAAIA,KAAK,GAAG,EAAZ,EAAgB;AACdR,QAAAA,MAAM,mCAAQA,MAAR;AAAgB,WAACO,GAAD,GAAOC;AAAvB,UAAN;AACD;;AACD,aAAOR,MAAP;AACD,KALD;AAMAT,IAAAA,UAAU,mCAAQA,UAAR;AAAoB,OAACY,EAAD,GAAMH;AAA1B,MAAV;AACAX,IAAAA,KAAK,CAACoB,SAAN,CAAgBlB,UAAhB;AACD;;AACD,MAAImB,CAAJ;;AACA,WAASX,QAAT,GAAoB;AAClB,SAAKW,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGrB,KAAK,CAACsB,SAAtB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCpB,MAAAA,GAAG,CAACsB,IAAJ,eACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AACE,QAAA,GAAG,EAAEF,CADP;AAEE,QAAA,EAAE,EAAEA,CAFN;AAGE,QAAA,MAAM,EAAET,MAHV;AAIE,QAAA,OAAO,EAAEZ,KAAK,CAACwB,OAJjB;AAKE,QAAA,SAAS,EAAExB,KAAK,CAACyB,SALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAWD;;AACD,WAAOxB,GAAP;AACD;;AACD,SAAOA,GAAP;AACD;;AAED,eAAeF,cAAf","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TableColCustom from \"./TableColCustom\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nfunction TableRowCustom(props) {\r\n  let res = [];\r\n  let cellValue1 = {};\r\n  //Styling table rows\r\n  const StyledTableRow = withStyles(theme => ({\r\n    root: {\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: theme.palette.action.hover\r\n      }\r\n    }\r\n  }))(TableRow);\r\n  tableRow();\r\n  /*  {val} :object of column values passed from tableColumn */\r\n  /*  {newVal} :object of column values passed from {val} object and populated \r\n  it only if all the columns for the particular row is filled */\r\n  /*  id : it contains the row index of the column got edited */\r\n  /*{cellValue}: final object which contains the row value and column value\r\n  Structure of {cellValue}:\r\n      Object {0: Object, 1: Object}\r\n        0: Object\r\n          val: Object\r\n            Supplier_ID: \"1\"\r\n            Reduced Checking: \"2\"\r\n            ASN Approved: \"3\"\r\n        1: Object\r\n          val: Object\r\n            Supplier_ID: \"4\"\r\n            Reduced Checking: \"5\"\r\n            ASN Approved: \"6\"\r\n      */\r\n  var newVal = {};\r\n  function colVal(val, id) {\r\n    newVal = {};\r\n    Object.entries(val).map(([key, value]) => {\r\n      if (value > \"\") {\r\n        newVal = { ...newVal, [key]: value };\r\n      }\r\n      return newVal;\r\n    });\r\n    cellValue1 = { ...cellValue1, [id]: newVal };\r\n    props.cellFinal(cellValue1);\r\n  }\r\n  var j;\r\n  function tableRow() {\r\n    for (j = 0; j < props.totalrows; j++) {\r\n      res.push(\r\n        <StyledTableRow>\r\n          <TableColCustom\r\n            key={j}\r\n            id={j}\r\n            colval={colVal}\r\n            headers={props.headers}\r\n            totalcols={props.totalcols}\r\n          />\r\n        </StyledTableRow>\r\n      );\r\n    }\r\n    return res;\r\n  }\r\n  return res;\r\n}\r\n\r\nexport default TableRowCustom;\r\n"]},"metadata":{},"sourceType":"module"}